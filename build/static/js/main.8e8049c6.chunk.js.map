{"version":3,"sources":["components/Navbar.js","components/Code.js","components/Terminal.js","components/Project.js","components/Section.js","components/Cascade.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","Component","Code","text","this","props","replace","textBox","Terminal","state","inputText","lines","user","wd","prevPath","fs","version","ref","React","createRef","inputBox","current","scrollTop","scrollHeight","axios","get","then","response","setState","parseInt","data","length","catch","err","input","parsed","i","undefined","push","concat","commands","slice","path","split","traversed","temp","JSON","stringify","Object","keys","join","newPath","prefix","dirs","dirName","argv","hasParams","selected","c","echo","e","pos","target","value","inputHistory","selectionStart","autoFocus","onChange","handleInput","bind","onKeyDown","submitInput","onClick","spellCheck","output","keyCode","getCommand","color","viewBox","id","cx","cy","r","fill","circle","Project","desc","lang","langIcon","title","headers","icon","toLowerCase","console","log","demo","src","Section","element","Cascade","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e8049c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Navbar.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Navbar\">\r\n                <ul>\r\n                    {/* <div className=\"github-link\">\r\n                        <a href=\"https://www.github.com/walz0/\" title=\"github.com/walz0\">\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </a>\r\n                    </div> */}\r\n                    <li>\r\n                        <a href=\"/about\">about</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/contact\">contact</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/blog\">blog</a>\r\n                    </li>\r\n                </ul>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Code.css'\r\n\r\nexport default class Code extends Component {\r\n    componentDidMount() {\r\n        // await this.props.text;\r\n    }\r\n\r\n    textBox() {\r\n        let text = this.props.text.replace(/^\\s+/mg, \"\")\r\n\r\n        return(\r\n        <pre>\r\n            { text }\r\n        </pre>)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.text != null) {\r\n            return (\r\n                <div className=\"Code\">\r\n                    { this.props.text ? this.textBox() : null }\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return <div></div>;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Terminal.css';\r\n\r\nexport default class Terminal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputText: \"\",\r\n            lines: [\r\n                `\r\n                ~\r\n                my name is aidan, im currently a freelance developer looking to\r\n                expand my horizons to something new and interesting. for the past\r\n                year i have specialized in web3 apps on the ethereum and solana\r\n                networks. i enjoy designing efficient and scalable systems to deliver\r\n                reliable products that push expectations. my true passion lies in\r\n                python development, many of my favorite projects are compact and\r\n                effective scripts i wrote on a binge after an idea popped into my\r\n                head. feel free to have a look at my work, and if you are interested\r\n                in working together send me an email @ aidan.m.walz@gmail.com\r\n                ~\r\n                Type 'help' for more info on the available commands...`\r\n            ],\r\n            user: \"root\",\r\n            wd: \"~\",\r\n            prevPath: \"\",\r\n            fs: {\r\n                \"~\": {\r\n                    \"code\": {},\r\n                    \"secret\": {}\r\n                }\r\n            },\r\n            version: null\r\n        };\r\n\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount () {\r\n        // Scroll any init text into view\r\n        let inputBox = this.ref.current;\r\n        inputBox.scrollTop = inputBox.scrollHeight + 50;\r\n\r\n        // Get total number of commits on portfolio\r\n        axios.get('https://api.github.com/repos/walz0/portfolio/commits')\r\n            .then((response) => {\r\n                this.setState({\r\n                    version: parseInt(response.data.length, 10)\r\n                })\r\n            })\r\n            .catch((err) => {})\r\n    }\r\n\r\n    // Push the latest command into history and execute\r\n    push(input) {\r\n        // Parse input to remove undefined output\r\n        let parsed = []\r\n        for (var i = 0; i < input.length; i++) {\r\n            if (input[i] !== undefined) {\r\n                parsed.push(input[i]);\r\n            }\r\n        }\r\n        this.setState({\r\n            lines: \r\n                this.state.lines.concat(\r\n                    parsed\r\n                )\r\n        });\r\n    }\r\n\r\n    getCommand(input) {\r\n        const commands = {\r\n            \"pwd\": () => { \r\n                let base = \"~\";\r\n                if (this.state.wd !== \"~\") {\r\n                    return ([\r\n                        base + this.state.wd.slice(1)\r\n                    ]); \r\n                } \r\n                else {\r\n                    return this.state.user;\r\n                }\r\n            },\r\n            \"ls\": () => { \r\n                // Search file system for current directory\r\n                // Print dirs and files within current directory\r\n                let path = this.state.wd.split('/');\r\n\r\n                // All dirs that have been traversed\r\n                let traversed = [];\r\n                // Temp var for traversing fs\r\n                let temp = []; \r\n\r\n                for (var i = 0; i < path.length; i++) {\r\n                    if (JSON.stringify(path) == JSON.stringify(traversed)) {\r\n                        // Working dir has been found\r\n                        break;\r\n                    }\r\n                    // Temp var for traversing fs\r\n                    temp = this.state.fs[path[i]];\r\n                    // Push dir\r\n                    traversed.push(path[i]);\r\n                }\r\n\r\n                return (temp == undefined) ? undefined : Object.keys(temp).join('  ');\r\n            },\r\n            // \"l\": () => { return this.getCommand(\"ls\") },\r\n            \"cd\": (newPath) => {\r\n                // Search file system for current directory\r\n                // Print dirs and files within current directory\r\n                let path = this.state.wd.split('/');\r\n\r\n                // All dirs that have been traversed\r\n                let traversed = [];\r\n                // Temp var for traversing fs\r\n                let temp = []; \r\n\r\n                for (var i = 0; i < path.length; i++) {\r\n                    if (JSON.stringify(path) == JSON.stringify(traversed)) {\r\n                        // Working dir has been found\r\n                        break;\r\n                    }\r\n                    // Temp var for traversing fs\r\n                    temp = this.state.fs[path[i]];\r\n                    // Push dir\r\n                    traversed.push(path[i]);\r\n                }\r\n\r\n                // Do not change directory\r\n                if (newPath[0] == \".\") {\r\n                    return undefined;\r\n                }\r\n                else if (newPath[0] == \"..\") {\r\n                    // Get directories as list\r\n                    let dirs = this.state.wd.split('/');\r\n                    // Update working directory\r\n                    this.setState({\r\n                        wd: dirs.slice(0, dirs.length - 1).join('/')\r\n                    });\r\n                    return undefined;\r\n                }\r\n                else {\r\n                    // Current directory environment\r\n                    let context = temp;\r\n\r\n                    let prefix = newPath[0].slice(0, 2);\r\n\r\n                    // if ../path or ./path\r\n                    if (prefix == \"./\") {\r\n                        // Same behavior as without ./\r\n                        this.setState({\r\n                            wd: this.state.wd + '/' + newPath[0].slice(2)\r\n                        })\r\n                        return undefined;\r\n                    }\r\n                    else if (prefix == \"..\") {\r\n                        \r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            wd: this.state.wd + '/' + newPath\r\n                        })\r\n                        return undefined;\r\n                    }\r\n                }\r\n            },\r\n            \"mkdir\": (dirName) => {\r\n                if (dirName == undefined) {\r\n                    return 'mkdir: missing operand';\r\n                }\r\n\r\n                // Search file system for current directory\r\n                // Print dirs and files within current directory\r\n                let path = this.state.wd.split('/');\r\n\r\n                // If root\r\n                if (path[0] == \"~\") {\r\n                    let temp = this.state.fs;\r\n                    temp['~'][dirName] = {};\r\n                    this.setState({\r\n                        fs: temp\r\n                    });\r\n                    return undefined;\r\n                }\r\n\r\n                // All dirs that have been traversed\r\n                let traversed = [];\r\n                // Temp var for traversing fs\r\n                let temp = []; \r\n\r\n                for (var i = 0; i < path.length - 1; i++) {\r\n                    if (JSON.stringify(path) == JSON.stringify(traversed)) {\r\n                        // Working dir has been found\r\n                        break;\r\n                    }\r\n                    // Temp var for traversing fs\r\n                    temp = this.state.fs[path[i]];\r\n                    // Push dir\r\n                    traversed.push(path[i]);\r\n                }\r\n\r\n                let currDir = path[path.length - 1];\r\n                // Create new directory\r\n                temp[currDir][dirName] = {};\r\n                // Update state\r\n                this.setState({\r\n                    fs: temp\r\n                });\r\n            },\r\n            \"banner\": () => { return (`\r\n                This is a banner\r\n                ===========================\r\n                :)\r\n            `); },\r\n            \"whoami\": () => { return (this.state.user) }\r\n        }\r\n\r\n\r\n        let argv = input.split(\" \");\r\n\r\n        let hasParams = false;\r\n        // If command has parameters\r\n        if (argv.length > 1) {\r\n            hasParams = true;\r\n        }\r\n\r\n        let selected = \"\";\r\n        for (var c in commands) {\r\n            if (argv[0] === c) {\r\n                selected = c;\r\n            }\r\n        }\r\n\r\n        if (selected !== \"\") {\r\n            let echo = `${this.state.user}:${this.state.wd}λ ${input}`;\r\n            if (hasParams) {\r\n                this.push([echo, commands[selected](argv.slice(1))]);\r\n            } else {\r\n                this.push([echo, commands[selected]()]);\r\n            }\r\n        }\r\n        else {\r\n            this.push([`${input}: command not found`]);\r\n        }\r\n    }\r\n\r\n    handleInput(e) {\r\n        let pos = this.state.user.length + 2 + this.state.wd.length + 1;\r\n        this.setState({\r\n            inputText: e.target.value.slice(pos)\r\n        });\r\n        \r\n        const inputHistory = this.ref.current;\r\n        if (inputHistory != null) {\r\n            inputHistory.scrollTop = inputHistory.scrollHeight + 50;\r\n        }\r\n\r\n        if (e.target.selectionStart < pos) {\r\n            e.target.selectionStart = pos;\r\n        }\r\n    }\r\n\r\n    inputBox() {\r\n        return(\r\n            <input \r\n                autoFocus={ true }\r\n                value={ this.state.user + \":\" + this.state.wd + \"λ \" + this.state.inputText}\r\n                onChange={this.handleInput.bind(this)}\r\n                onKeyDown={this.submitInput.bind(this)}\r\n                onClick={this.handleInput.bind(this)}\r\n                spellCheck={false}></input>\r\n        );\r\n    }\r\n\r\n    inputHistory() {\r\n        // Fill box with lines to push new ones to the bottom\r\n        let output = ``;\r\n        for (var i = 0; i < 200; i++) {\r\n            output += `⠀\r\n            `;\r\n        }\r\n\r\n        let lines = this.state.lines;\r\n        for (i = 0; i < lines.length; i++) {\r\n            if (i == 0) {\r\n                output += `portfoliOS :: [Version ${this.state.version}]\r\n                `;\r\n            }\r\n            output += `${lines[i]}\r\n            `;\r\n        }\r\n\r\n        output = output.replace(/^\\s+/mg, \"\");\r\n\r\n        return(\r\n            <pre ref={this.ref}>\r\n                { output }\r\n            </pre>\r\n        );\r\n    }\r\n\r\n    submitInput(e) {\r\n        let key = e.keyCode;\r\n        let enter = 13;\r\n\r\n        if (key === enter) {\r\n            this.getCommand(this.state.inputText);\r\n            this.setState({ \r\n                inputText: \"\",\r\n                },\r\n                () => {\r\n                    // Scroll terminal to bottom\r\n                    const inputHistory = this.ref.current;\r\n                    if (inputHistory != null) {\r\n                        inputHistory.scrollTop = inputHistory.scrollHeight + 50;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            if (e.target.selectionStart <= 2) {\r\n                e.target.selectionStart = 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    circle(color) {\r\n        return(\r\n            <div className=\"circle\">\r\n                <svg viewBox=\"0 0 100 100\" id=\"circle\">\r\n                    <circle cx=\"50\" cy=\"50\" r=\"50\" fill={color} />\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Terminal\">\r\n                <div className=\"titleBar\">\r\n                    <div className=\"controls\">\r\n                        { this.circle(\"#FF6059\") }\r\n                        { this.circle(\"#FFBD2E\") }\r\n                        { this.circle(\"#28CA42\") }\r\n                    </div>\r\n                    root\r\n                </div>\r\n                { this.inputHistory() }\r\n                { this.inputBox() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Project.css';\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            desc: undefined,\r\n            lang: undefined,\r\n            langIcon: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://api.github.com/repos/walz0/' + this.props.title, {\r\n                headers: { \"Authorization\": \"Bearer \" + process.env.REACT_APP_GITHUB_TOKEN }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    desc: response.data[\"description\"]\r\n                })\r\n            })\r\n            .catch((err) => {})\r\n        axios.get('https://api.github.com/repos/walz0/' + this.props.title + '/languages', {\r\n                headers: { \"Authorization\": \"Bearer \" + process.env.REACT_APP_GITHUB_TOKEN }\r\n            })\r\n            .then((response) => {\r\n                // Select languages with most lines of code\r\n                let icon = Object.keys(response.data)[0].toLowerCase()\r\n                if (icon == \"html\") { icon = \"html5\" }\r\n                if (icon == \"c++\") { icon = \"cplusplus\" }\r\n                this.setState({\r\n                    lang: Object.keys(response.data)[0],\r\n                    langIcon: icon\r\n                })\r\n            })\r\n            .catch((err) => {})\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.lang)\r\n        return (\r\n            <div className=\"Project\">\r\n                <div className=\"project-title\">{ this.props.title }</div>\r\n                <div className=\"project-desc\">{ this.state.desc }</div>\r\n                <div className=\"github\">\r\n                    <a href={ \"https://github.com/walz0/\" + this.props.title } target=\"_blank\">Source Code</a>\r\n                </div>\r\n                { this.props.demo !== undefined ? \r\n                    <div className=\"demo\">\r\n                        <a href={ this.props.demo } target=\"_blank\">📑 Demo</a>\r\n                    </div> : null}\r\n                <div className=\"language\">\r\n                    { this.state.lang ? <img \r\n                        src={`https://cdn.jsdelivr.net/gh/devicons/devicon/icons/${this.state.langIcon}/${this.state.langIcon}-original.svg`} \r\n                        className=\"lang-icon\"/> : null}\r\n                    { this.state.lang }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Section.css';\r\n\r\nexport default class Section extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Section\">\r\n                <div className=\"title\">\r\n                    { this.props.title }\r\n                </div>\r\n                <div className=\"desc\">\r\n                    { this.props.desc }\r\n                </div>\r\n                <div className=\"element\">\r\n                    { this.props.element }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Cascade.css'\r\n\r\nexport default class Cascade extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Cascade\">\r\n                <div className=\"green\"></div>\r\n                <div className=\"yellow\"></div>\r\n                <div className=\"orange\"></div>\r\n                <div className=\"red\"></div>\r\n                <div className=\"purple\"></div>\r\n                <div className=\"blue\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Code from './Code';\r\nimport './Home.css';\r\nimport Terminal from './Terminal';\r\nimport Project from './Project';\r\nimport Section from './Section';\r\nimport Cascade from './Cascade';\r\nimport Navbar from './Navbar';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <div className=\"container\">\r\n                    <Code text={\r\n                        `λ whoami\r\n                        > Aidan Walz`\r\n                    } />\r\n                    <Terminal />\r\n                </div>\r\n                <Cascade />\r\n                <Section \r\n                    title=\"Projects\"\r\n                    // desc=\"section\"\r\n                    element={\r\n                        <div className='project-container'>\r\n                            <Project \r\n                                title={\"frc-match-dl\"} />\r\n                            <Project \r\n                                title={\"papel\"} />\r\n                            <Project \r\n                                title={\"frc-analysis\"}\r\n                                demo={\"https://walz0.github.io/frc\"} />\r\n                        </div>\r\n                    }/>\r\n                {/* <Project \r\n                    title={\"frc-match-dl\"} \r\n                    git={\"https://www.github.com/walz0/papel\"} />\r\n                <Project \r\n                    title={\"stock-py\"} \r\n                    git={\"https://www.github.com/walz0/papel\"} />\r\n                <Project \r\n                    title={\"papel\"} \r\n                    git={\"https://www.github.com/walz0/papel\"} />\r\n                <Project \r\n                    title={\"frc-analysis\"} \r\n                    git={\"https://www.github.com/walz0/papel\"} />\r\n               <Project \r\n                    title={\"Ishiiruka\"} \r\n                    git={\"https://www.github.com/walz0/papel\"} /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Navbar from './components/Navbar'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/about\" />\r\n          <Route path=\"/contact\" />\r\n          <Route path=\"/blog\" />\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}